package FrontEndIDLInterface;


/**
* FrontEndIDLInterface/_frontEndIdlInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from FrontEndIDLInterface.idl
* Sunday, December 6, 2015 5:15:56 PM EST
*/

public class _frontEndIdlInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements FrontEndIDLInterface.frontEndIdlInterface
{

  public String openAccount (String bank, String firstname, String lastname, String emailaddress, String phonenumber, String password)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("openAccount", true);
                $out.write_string (bank);
                $out.write_string (firstname);
                $out.write_string (lastname);
                $out.write_string (emailaddress);
                $out.write_string (phonenumber);
                $out.write_string (password);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return openAccount (bank, firstname, lastname, emailaddress, phonenumber, password        );
            } finally {
                _releaseReply ($in);
            }
  } // openAccount

  public boolean getLoan (String bank, String accountnumber, String password, int loanAmount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLoan", true);
                $out.write_string (bank);
                $out.write_string (accountnumber);
                $out.write_string (password);
                $out.write_long (loanAmount);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLoan (bank, accountnumber, password, loanAmount        );
            } finally {
                _releaseReply ($in);
            }
  } // getLoan

  public boolean transferLoan (String loanID, String currentBank, String otherBank)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferLoan", true);
                $out.write_string (loanID);
                $out.write_string (currentBank);
                $out.write_string (otherBank);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferLoan (loanID, currentBank, otherBank        );
            } finally {
                _releaseReply ($in);
            }
  } // transferLoan

  public boolean delayPayment (String bank, String loanID, FrontEndIDLInterface.cal currentDueDate, FrontEndIDLInterface.cal newDueDate)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delayPayment", true);
                $out.write_string (bank);
                $out.write_string (loanID);
                FrontEndIDLInterface.frontEndIdlInterfacePackage.cHelper.write ($out, currentDueDate);
                FrontEndIDLInterface.frontEndIdlInterfacePackage.cHelper.write ($out, newDueDate);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return delayPayment (bank, loanID, currentDueDate, newDueDate        );
            } finally {
                _releaseReply ($in);
            }
  } // delayPayment

  public FrontEndIDLInterface.customerInfo printCustomerInfo (String bank)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("printCustomerInfo", true);
                $out.write_string (bank);
                $in = _invoke ($out);
                FrontEndIDLInterface.customerInfo $result = FrontEndIDLInterface.frontEndIdlInterfacePackage.custInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return printCustomerInfo (bank        );
            } finally {
                _releaseReply ($in);
            }
  } // printCustomerInfo

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FrontEndIDLInterface/frontEndIdlInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _frontEndIdlInterfaceStub
